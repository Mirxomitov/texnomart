import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:texnomart/presentation/pages/product_details/components/success_state.dart';import 'package:texnomart/utils/states.dart';import '../../../utils/status.dart';import '../../blocs/product_details/product_details_bloc.dart';class ProductDetails extends StatelessWidget {  const ProductDetails({super.key});  @override  Widget build(BuildContext context) {    return BlocBuilder<ProductDetailsBloc, ProductDetailsState>(      builder: (context, state) {        return WillPopScope(          onWillPop: () async {            Navigator.pop(context, state.productId);            return false;          },          child: Scaffold(            backgroundColor: Colors.white,            appBar: AppBar(              actions: [                IconButton(                  icon: const Icon(Icons.share),                  onPressed: () {},                ),                IconButton(                  icon: const Icon(Icons.balance),                  onPressed: () {},                ),                context.read<ProductDetailsBloc>().state.isFavourite                    ? InkWell(                        onTap: () {                          context.read<ProductDetailsBloc>().add(RemoveFromFavourites());                        },                        child: const Icon(Icons.favorite, color: Colors.red, size: 24))                    : InkWell(                        onTap: () {                          context.read<ProductDetailsBloc>().add(AddToFavourites());                        },                        child: const Icon(Icons.favorite_border, size: 24)),                const SizedBox(width: 4),              ],              leading: IconButton(                icon: const Icon(Icons.arrow_back_outlined),                onPressed: () {                  print('popped id : ${state.productId}');                  Navigator.pop(context, state.productId);                },              ),              backgroundColor: Theme.of(context).primaryColor,            ),            body: switch (state.status) {              Status.loading => LoadingState(),              Status.success => Builder(                  builder: (context) {                    if (state.productData != null) {                      return SuccessState(state);                    }                    return ErrorState();                  },                ),              Status.fail => ErrorState(),              Status.initial => const Center(),            },          ),        );      },    );  }}